# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

env:
  S3_BUCKET_NAME: linkfolder-deploy

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        server.port: ${{secrets.PORT}}
        jwt.JWT_SECRET_KEY: ${{secrets.JWT_SECRET_KEY}}
        spring.application: demo
        spring.datasource.platform: mysql
        spring.datasource.url: ${{secrets.DATASOURCE_URL}}
        spring.datasource.username: ${{secrets.DATASOURCE_USERNAME}}
        spring.datasource.password: ${{secrets.DATASOURCE_PASSWORD}}
        spring.datasource.driver-class-name: com.mysql.cj.jdbc.Driver
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle
      run: ./gradlew clean build
      
    - name: Make Zip file
      run: zip -r ./$GITHUB_SHA.zip .
      shell: bash

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
        aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        aws-region: ${{secrets.AWS_REGION}}

    - name: Upload S3
      run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip

    - name: Deploy to AWS EC2 from S3
      run: |
          aws deploy create-deployment \
            --application-name ${{secrets.CODE_DEPLOY_APPLICATION_NAME}} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{secrets.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip
      
